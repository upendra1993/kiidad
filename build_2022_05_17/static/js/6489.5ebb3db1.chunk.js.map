{"version":3,"file":"static/js/6489.5ebb3db1.chunk.js","mappings":"6KAkFA,UA1EwB,SAACA,GACvB,IAAMC,EAAUD,EAAME,KAClBC,EAA6B,MAAjBF,EAAQG,YAAqCC,GAApBJ,EAAQG,MAAM,GAAkBH,EAAQG,MAAM,GAAGE,IAAM,mBAC5FC,EAAS,oDAAgDJ,GAKzDK,EAAaP,EAAQQ,GACrBC,EAAW,mBAAeF,GAC9B,OACE,uBAAKG,UAAU,0BACb,uBAAKC,IAAKL,EAAWI,UAAU,eAAeE,IAAI,QACjDZ,EAAQa,OACP,wBAAMH,UAAU,gDAAhB,OAIDV,EAAQc,OACP,wBAAMJ,UAAU,mDAAhB,QAIAV,EAAQe,mBAAqB,GAAKf,EAAQgB,cAAgB,IAC1D,wBACEN,UAAS,+DACPV,EAAQa,MAAQ,OAAS,SAF7B,IAMGb,EAAQe,mBAAqB,EAC1Bf,EAAQe,mBAAqB,IAC7B,IAAMf,EAAQgB,eAGtB,uBAAKN,UAAU,aACb,sBAAIA,UAAU,sBACZ,gBAAC,KAAD,CAAMO,GAAIR,EAAaC,UAAU,wBAC9BV,EAAQkB,OAGb,uBAAKR,UAAU,QACb,wBAAMA,UAAU,uBAAhB,MAA0CV,EAAQmB,OACjDnB,EAAQoB,YAAc,GACrB,uBAAKV,UAAU,yBAAf,MAA2CV,EAAQoB,aAErD,wBAAMV,UAAU,QACbW,MAAMC,KAAK,CAAEC,OAAQvB,EAAQwB,OAAQ,SAACC,EAAGC,GAAJ,OACpC,gBAAC,IAAD,CAAchB,UAAU,oBAAoBgB,IAAKA,SAIvD,uBAAKhB,UAAU,sBAAsBiB,KAAK,SACxC,0BACEC,KAAK,SACLC,QAAS,kBAnDMrB,EAmDgBR,EAAQQ,GAnDpBsB,EAmDwB,EAnDnBC,EAmDsB/B,EAAQoB,iBAjD9DY,EAAAA,EAAAA,IAAUxB,EAAIsB,EAAKC,GAFG,IAACvB,EAAIsB,EAAKC,GAoDxBrB,UAAU,yBACVuB,MAAM,eAEN,gBAAC,IAAD,CAAiBC,KAAMC,EAAAA,OAEzB,0BACEP,KAAK,SACLlB,UAAU,mCACVuB,MAAM,mBAEN,gBAAC,IAAD,CAAiBC,KAAME,EAAAA,Y,sJC1EnC,IAAIJ,EAAY,SAACxB,EAAIsB,EAAKC,GACtB,IAAIM,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAEvCC,GADJL,EAAOM,EAAsBN,IACPO,MAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKtC,KAAOA,KACvD,GAAIkC,EAAY,CACZ,IAAIK,EAAYV,EAAKO,MAAMI,WAAU,SAAAC,GAAG,OAAIA,EAAIzC,KAAOA,KACnDsC,EAAOT,EAAKO,MAAMG,GACtBD,EAAKhB,KAAOA,EACZO,EAAKO,MAAMG,GAAaD,MACrB,CACH,IAAIA,EAAO,CACPtC,GAAIA,EACJsB,IAAKA,EACLoB,KAAMnB,GAEVM,EAAKO,MAAMO,KAAKL,GAEpBN,aAAaY,QAAQ,OAAQd,KAAKe,UAAUhB,KAG5CiB,EAAiB,SAAC9C,EAAIsB,GACtB,IAAIO,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAEvCC,GADJL,EAAOM,EAAsBN,IACPO,MAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKtC,KAAOA,KACvD,GAAIkC,EAAY,CACZ,IAAIK,EAAYV,EAAKO,MAAMI,WAAU,SAAAC,GAAG,OAAIA,EAAIzC,KAAOA,KACnDsC,EAAOT,EAAKO,MAAMG,GAClBD,EAAKhB,KAAOA,EACZO,EAAKO,MAAMW,OAAOR,EAAW,IAE7BD,EAAKhB,KAAOA,EACZO,EAAKO,MAAMG,GAAaD,GAGhCN,aAAaY,QAAQ,OAAQd,KAAKe,UAAUhB,KAI5CM,EAAwB,SAACN,GACzB,OAAa,OAATA,QAA0BjC,IAATiC,GACjBmB,QAAQC,IAAI,qBACL,CACHb,MAAO,GACPc,MAAO,KAGXF,QAAQC,IAAI,sBACLpB,IAIXsB,EAAW,WACX,IAAItB,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE3C,OADAJ,EAAOM,EAAsBN,IAI7BuB,EAAY,WACZ,IAAIvB,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAI3C,OAHAJ,EAAOM,EAAsBN,IACxBO,MAAQ,GACbJ,aAAaY,QAAQ,OAAQd,KAAKe,UAAUhB,IACrCA,GAGPwB,EAAa,SAACrD,GACd,IAAI6B,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAC3CJ,EAAOM,EAAsBN,IACxBO,MAAQP,EAAKO,MAAMkB,QAAO,SAAAhB,GAAI,OAAIA,EAAKtC,KAAOA","sources":["components/card/CardProductGrid.jsx","helpers/CartManagement.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as IconStarFill } from \"bootstrap-icons/icons/star-fill.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { addToCart, createCartIfNotExists } from \"../../../src/helpers/CartManagement\";\n\n\nconst CardProductGrid = (props) => {\n  const product = props.data;\n  let file_name = product.image != null && product.image[0] != undefined ? product.image[0].url : \"400480132-27.jpg\";\n  let image_url = `http://dev.kiidad.com/public/products/img/${file_name}`;\n  const handleAddToCart = (id, qty, unitPrice) => {\n    // let cart = JSON.parse(localStorage.getItem(\"cart\"))\n    addToCart(id, qty, unitPrice)\n  }\n  let Product_id = product.id;\n  let Product_url = `/product/${Product_id}`;\n  return (\n    <div className=\"card product-grid-view\">\n      <img src={image_url} className=\"card-img-top\" alt=\"...\" />\n      {product.isNew && (\n        <span className=\"badge bg-success position-absolute mt-2 ml-2\">\n          New\n        </span>\n      )}\n      {product.isHot && (\n        <span className=\"badge bg-danger position-absolute r-0 mt-2 mr-2\">\n          Hot\n        </span>\n      )}\n      {(product.discountPercentage > 0 || product.discountPrice > 0) && (\n        <span\n          className={`rounded position-absolute p-2 bg-warning  ml-2 small ${\n            product.isNew ? \"mt-5\" : \"mt-2\"\n          }`}\n        >\n          -\n          {product.discountPercentage > 0\n            ? product.discountPercentage + \"%\"\n            : \"$\" + product.discountPrice}\n        </span>\n      )}\n      <div className=\"card-body\">\n        <h6 className=\"card-subtitle mb-2\">\n          <Link to={Product_url} className=\"text-decoration-none\">\n            {product.name}\n          </Link>\n        </h6>\n        <div className=\"my-2\">\n          <span className=\"font-weight-bold h5\">Rs {product.price}</span>\n          {product.originPrice > 0 && (\n            <del className=\"small text-muted ml-2\">Rs {product.originPrice}</del>\n          )}\n          <span className=\"ml-2\">\n            {Array.from({ length: product.star }, (_, key) => (\n              <IconStarFill className=\"text-warning mr-1\" key={key} />\n            ))}\n          </span>\n        </div>\n        <div className=\"btn-group btn-block\" role=\"group\">\n          <button\n            type=\"button\"\n            onClick={() => handleAddToCart(product.id, 1, product.originPrice)}\n            className=\"btn btn-sm btn-primary\"\n            title=\"Add to cart\"\n          >\n            <FontAwesomeIcon icon={faCartPlus} />\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-outline-secondary\"\n            title=\"Add to wishlist\"\n          >\n            <FontAwesomeIcon icon={faHeart} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardProductGrid;\n","let addToCart = (id, qty, unitPrice) => {\n    let cart = JSON.parse(localStorage.getItem(\"cart\"))\n    cart = createCartIfNotExists(cart);\n    let itemExists = cart.items.some((item) => item.id === id)\n    if (itemExists) {\n        let itemIndex = cart.items.findIndex(itm => itm.id === id)\n        let item = cart.items[itemIndex]\n        item.qty += qty\n        cart.items[itemIndex] = item\n    } else {\n        let item = {\n            id: id,\n            qty: qty,\n            unit: unitPrice\n        }\n        cart.items.push(item)\n    }\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n}\n\nlet reduceFromCart = (id, qty) => {\n    let cart = JSON.parse(localStorage.getItem(\"cart\"))\n    cart = createCartIfNotExists(cart);\n    let itemExists = cart.items.some((item) => item.id === id)\n    if (itemExists) {\n        let itemIndex = cart.items.findIndex(itm => itm.id === id)\n        let item = cart.items[itemIndex]\n        if (item.qty <= qty) {\n            cart.items.splice(itemIndex, 1);\n        } else {\n            item.qty -= qty\n            cart.items[itemIndex] = item\n        }\n    }\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n}\n\n// consider this as a cart structure\nlet createCartIfNotExists = (cart) => {\n    if (cart === null || cart === undefined) {\n        console.log(\"cart is undefined\")\n        return {\n            items: [],\n            total: 0,\n        }\n    } else {\n        console.log(\"cart was available\")\n        return cart\n    }\n}\n\nlet loadCart = () => {\n    let cart = JSON.parse(localStorage.getItem(\"cart\"))\n    cart = createCartIfNotExists(cart);\n    return cart;\n}\n\nlet clearCart = () => {\n    let cart = JSON.parse(localStorage.getItem(\"cart\"))\n    cart = createCartIfNotExists(cart);\n    cart.items = []\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n    return cart;\n}\n\nlet removeItem = (id) => {\n    let cart = JSON.parse(localStorage.getItem(\"cart\"))\n    cart = createCartIfNotExists(cart);\n    cart.items = cart.items.filter(item => item.id !== id)\n}\n\nexport {\n    addToCart,\n    createCartIfNotExists,\n    loadCart,\n    clearCart,\n    removeItem,\n    reduceFromCart\n}"],"names":["props","product","data","file_name","image","undefined","url","image_url","Product_id","id","Product_url","className","src","alt","isNew","isHot","discountPercentage","discountPrice","to","name","price","originPrice","Array","from","length","star","_","key","role","type","onClick","qty","unitPrice","addToCart","title","icon","faCartPlus","faHeart","cart","JSON","parse","localStorage","getItem","itemExists","createCartIfNotExists","items","some","item","itemIndex","findIndex","itm","unit","push","setItem","stringify","reduceFromCart","splice","console","log","total","loadCart","clearCart","removeItem","filter"],"sourceRoot":""}