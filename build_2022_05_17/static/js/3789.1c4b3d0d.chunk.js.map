{"version":3,"file":"static/js/3789.1c4b3d0d.chunk.js","mappings":"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","sources":["components/Paging.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Paging extends Component {\n  constructor(props) {\n    super();\n    const {\n      totalRecords = null,\n      pageLimit = 30,\n      pageNeighbours = 0,\n      sizing = \"\",\n      alignment = \"\",\n    } = props;\n    this.sizing = typeof sizing === \"string\" ? sizing : \"\";\n    this.alignment = typeof alignment === \"string\" ? alignment : \"\";\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = (page) => {\n    const { onPageChanged = (f) => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords,\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = (evt) => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <nav aria-label=\"Page navigation\">\n        <ul className={`pagination ${this.sizing} ${this.alignment}`}>\n          {pages.map((page, index) => {\n            if (page === LEFT_PAGE)\n              return (\n                <li key={index} className=\"page-item\">\n                  <button\n                    className=\"page-link\"\n                    aria-label=\"Previous\"\n                    onClick={this.handleMoveLeft}\n                  >\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </button>\n                </li>\n              );\n\n            if (page === RIGHT_PAGE)\n              return (\n                <li key={index} className=\"page-item\">\n                  <a\n                    className=\"page-link\"\n                    href=\"#!\"\n                    aria-label=\"Next\"\n                    onClick={this.handleMoveRight}\n                  >\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n            return (\n              <li\n                key={index}\n                className={`page-item${currentPage === page ? \" active\" : \"\"}`}\n              >\n                <a\n                  className=\"page-link\"\n                  href=\"#!\"\n                  onClick={(e) => this.handleClick(page, e)}\n                >\n                  {page}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPaging.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func,\n  sizing: PropTypes.string,\n};\n\nexport default Paging;\n"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Paging","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","sizing","alignment","ceil","this","className","map","index","key","onClick","href","e","Component"],"sourceRoot":""}